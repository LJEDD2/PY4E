# Q2.  여러분은 6명의 멤버를 거느리는 영업팀의 영업관리자 입니다.
# 각 멤버별로 올해 실적을 보고 잘한 멤버는 보너스를 주고 못한 멤버는 면담을 하려고 합니다.
# 파이썬을 이용하여 함수를 만들어 보너스 대상자와 면담 대상자를 골라주세요.

# 😲조건 1 - 예비 보너스 대상자는 평균 실적 1등 2등 입니다.
# 😲조건 2 - 예비 면담 대상자는 평균 실적 5등 6등 입니다.
# 😲조건 3 - 보너스 대상자의 평균 실적이 5보다 크지 않으면 보너스 대상자에서 제외 됩니다.
# 😲조건 4 - 면담 대상자의 평균 실적이 3보다 크면 면담 대상자에서 제외 됩니다.

# 이름, 실적
member_names = ["갑돌이", "갑순이", "을돌이", "을순이", "병돌이", "병순이"]
member_records = [[4,5,3,5,6,5,3,4,1,3,4,5],[2,3,4,3,1,2,0,3,2,5,7,2],
           [1,3,0,3,3,4,5,6,7,2,2,1],[3,2,9,2,3,5,6,6,4,6,9,9],
           [8,7,7,5,6,7,5,8,8,6,10,9],[7,8,4,9,5,10,3,3,2,2,1,3]]

avg_mem = {}
for i in range(6):
    avg_mem[member_names[i]] = sum(member_records[i]) // 12

# 실적 순위 매기기
min_bonus = 5
max_interv = 3
# 평균 실적이 5 이상인 멤버 필터링 후 실적 점수 기준으로 내림차순 정렬
bonus = list(filter(lambda x : x[1] >= min_bonus, avg_mem.items()))
bonus.sort(key=lambda x:-x[1])
# 평균 실적이 3 미만인 멤버 필터링 후 실적 점수 기준으로 내림차순 정렬
interview = list(filter(lambda x : x[1] < max_interv, avg_mem.items()))
interview.sort(key=lambda x:-x[1])

# 1등 2등 단 2명까지 보너스
for i in bonus[:2]:
    print(f'보너스 대상자 {i[0]}')
print()
# 5등 6등 단 2명 면담
for i in interview[:2]:
    print(f'면담 대상자 {i[0]}')
